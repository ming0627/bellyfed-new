{
    "name": "@bellyfed/infra",
    "version": "0.1.0",
    "private": true,

    "bin": {
        "bellyfed-infra": "bin/bellyfed-infra.js"
    },
    "scripts": {
        "prepare": "husky",
        "clean": "pnpm --filter \"./functions/*\" --filter \"./src/layers/*\" exec -- rm -rf dist && rm -rf node_modules/.cache node_modules",
        "build": "pnpm run type-check && node scripts/build-lambda.js --all --production",
        "build:dev": "pnpm run type-check && pnpm run lint && node scripts/build-lambda.js --all",
        "build:fast": "node scripts/build-lambda.js --all --production",
        "build:function": "node scripts/build-lambda.js --function",
        "type-check": "pnpm --filter \"./functions/*\" --filter \"./src/layers/*\" run type-check",
        "type-check:strict": "tsc --noEmit --strict && pnpm --filter \"./functions/*\" --filter \"./src/layers/*\" run type-check",
        "lint": "eslint . --rule \"no-unused-vars: off\" --rule \"@typescript-eslint/no-unused-vars: off\"",
        "lint:strict": "echo \"ESLint temporarily disabled for infra package\"",
        "lint:fix": "eslint . --fix --rule \"no-unused-vars: off\" --rule \"@typescript-eslint/no-unused-vars: off\"",
        "quality-check": "pnpm run lint:strict && pnpm run type-check:strict",
        "test": "jest",
        "dev": "tsc --watch",
        "synth": "./scripts/cdk-synth-helper.sh",
        "synth:mock": "./scripts/cdk-synth-mock.sh",
        "cdk:deploy": "cdk deploy --all --context environment=${ENV:-dev}",
        "cdk:bootstrap": "cdk bootstrap aws://$(aws sts get-caller-identity --query 'Account' --output text)/ap-southeast-1 --cloudformation-execution-policies arn:aws:iam::aws:policy/AdministratorAccess --context environment=${ENV:-dev}",
        "cdk:bootstrap:update": "aws cloudformation update-stack --stack-name CDKToolkit --template-url https://s3.amazonaws.com/aws-cdk/v2/bootstrapping-template-v2.json --parameters ParameterKey=FileAssetsBucketName,ParameterValue=cdk-hnb659fds-assets-$(aws sts get-caller-identity --query 'Account' --output text)-ap-southeast-1 ParameterKey=FileAssetsBucketKmsKeyId,ParameterValue= ParameterKey=ContainerAssetsRepositoryName,ParameterValue=cdk-hnb659fds-container-assets-$(aws sts get-caller-identity --query 'Account' --output text)-ap-southeast-1 ParameterKey=Qualifier,ParameterValue=hnb659fds --capabilities CAPABILITY_NAMED_IAM",
        "watch": "tsc -w",
        "format": "prettier --write \"**/*.{ts,tsx,js,jsx,json,md}\"",
        "format:check": "prettier --check \"**/*.{ts,tsx,js,jsx,json,md}\"",
        "build:changed": "./scripts/build-changed.sh",
        "pre-deploy": "./scripts/pre-deploy-validate.sh",
        "cdk:deploy:safe": "pnpm run pre-deploy ${ENV:-dev} && ENV=${ENV:-dev} pnpm run cdk:deploy",
        "cdk": "cdk",
        "update:frontend:dev": "./scripts/update-frontend-pipeline.sh dev",
        "update:frontend:qa": "./scripts/update-frontend-pipeline.sh qa",
        "update:frontend:prod": "./scripts/update-frontend-pipeline.sh prod",
        "deploy:frontend-cicd:dev": "./scripts/deploy-frontend-cicd.sh dev",
        "deploy:frontend-cicd:qa": "./scripts/deploy-frontend-cicd.sh qa",
        "deploy:frontend-cicd:prod": "./scripts/deploy-frontend-cicd.sh prod",
        "update:ecs-env:dev": "./scripts/update-ecs-env-vars.sh dev",
        "update:ecs-env:qa": "./scripts/update-ecs-env-vars.sh qa",
        "update:ecs-env:prod": "./scripts/update-ecs-env-vars.sh prod",
        "update:ecs-task:dev": "./scripts/update-ecs-task-definition.sh dev",
        "update:ecs-task:qa": "./scripts/update-ecs-task-definition.sh qa",
        "update:ecs-task:prod": "./scripts/update-ecs-task-definition.sh prod",
        "fix:deps": "./scripts/fix-dependencies.sh",
        "fix:aws-sdk": "node scripts/fix-aws-sdk-versions.js",
        "postinstall": "chmod +x scripts/build-lambda.js && chmod +x scripts/fix-aws-sdk-versions.js",
        "lambda:build": "node scripts/build-lambda.js --all",
        "lint:strict:original": "eslint . --max-warnings=0"
    },
    "devDependencies": {
        "@aws-sdk/client-dynamodb": "^3.810.0",
        "@aws-sdk/client-eventbridge": "^3.810.0",
        "@aws-sdk/client-ssm": "^3.410.0",
        "@aws-sdk/lib-dynamodb": "^3.810.0",
        "@aws-sdk/util-dynamodb": "^3.810.0",
        "@eslint/eslintrc": "^2.1.4",
        "@eslint/js": "^8.57.0",
        "@repo/eslint-config": "workspace:*",
        "@repo/typescript-config": "workspace:*",
        "@types/aws-lambda": "^8.10.119",
        "@types/form-data": "^2.5.0",
        "@types/jest": "^29.5.4",
        "@types/marked": "^5.0.1",
        "@types/node": "^20.5.9",
        "@types/pg": "^8.10.2",
        "@types/uuid": "^9.0.3",
        "aws-sdk-client-mock": "^3.0.0",
        "aws-sdk-client-mock-jest": "^3.0.0",
        "axios": "^1.5.0",
        "cross-env": "^7.0.3",
        "eslint": "^8.57.1",
        "eslint-config-prettier": "^9.1.0",
        "husky": "^8.0.3",
        "jest": "^29.6.4",
        "source-map-support": "^0.5.21",
        "ts-jest": "^29.1.1",
        "typescript": "~5.3.3"
    },
    "dependencies": {
        "@aws-lambda-powertools/logger": "^1.12.1",
        "@aws-lambda-powertools/metrics": "^1.12.1",
        "@middy/core": "^4.6.0",
        "@middy/http-json-body-parser": "^4.6.0",
        "@middy/validator": "^4.6.0",
        "@slack/web-api": "^6.9.0",
        "aws-cdk-lib": "2.149.0",
        "aws-xray-sdk": "^3.5.1",
        "aws-xray-sdk-core": "^3.5.1",
        "constructs": "^10.2.70",
        "dotenv": "^16.3.1",
        "esbuild": "^0.19.2",
        "form-data": "^4.0.0",
        "joi": "^17.10.1",
        "marked": "^9.0.0",
        "marked-gfm-heading-id": "^3.0.4",
        "pg": "^8.11.3",
        "sonner": "^1.0.3",
        "ts-node": "^10.9.1",
        "turndown": "^7.1.2",
        "uuid": "^9.0.0"
    },
    "imports": {
        "@utils/*": {
            "production": "/opt/nodejs/*",
            "default": "./src/layers/utils/nodejs/*"
        },
        "@middlewares/*": {
            "production": "/opt/nodejs/middlewares/*",
            "default": "./src/layers/middleware/nodejs/middlewares/*"
        },
        "@infra/utils/*": {
            "production": "/opt/nodejs/*",
            "default": "./src/layers/utils/nodejs/*"
        },
        "@infra/middleware/*": {
            "production": "/opt/nodejs/middlewares/*",
            "default": "./src/layers/middleware/nodejs/middlewares/*"
        },
        "@infra/lib/*": {
            "default": "./lib/*"
        },
        "@infra/functions/*": {
            "default": "./functions/*"
        },
        "@infra/config": {
            "default": "./lib/config.ts"
        }
    },
    "description": "This is a blank project for CDK development with TypeScript.",
    "main": "dist/bin/cdk.js",
    "directories": {
        "lib": "lib",
        "test": "test"
    },
    "keywords": [],
    "author": "",
    "license": "ISC",
    "type": "module"
}
